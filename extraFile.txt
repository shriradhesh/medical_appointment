
patient Schema  : 

CREATE TABLE `medical_appoinment`.`patient` (`id` INT(20) NOT NULL AUTO_INCREMENT , `FirstName` VARCHAR(255) NOT NULL , `LastName` VARCHAR(255) NOT NULL , `DOB` VARCHAR(20) NOT NULL , `Gender` ENUM('male','female','others','') NOT NULL , `Address` VARCHAR(200) NOT NULL , `Email` VARCHAR(200) NOT NULL , `Password` VARCHAR(200) NOT NULL , `Phone_no` VARCHAR(200) NOT NULL , `Emergency_Contact` VARCHAR(200) NOT NULL , `Relationship_to_Patient` VARCHAR(200) NOT NULL , PRIMARY KEY (`id`), UNIQUE `Email` (`Email`(50))) ENGINE = InnoDB;



	const searchDoctors = (req, res) => {
  // Extract query parameters from the request
  const { city, state, specialization, experience } = req.query;

  // Build the SQL query dynamically based on the provided filters
  let sql = 'SELECT * FROM doctor WHERE 1=1'; // Always true condition to start the query

  if (city) {
    sql += ` AND city = '${city}'`;
  }

  if (state) {
    sql += ` AND state = '${state}'`;
  }

  if (specialization) {
    sql += ` AND specialization = '${specialization}'`;
  }

  if (experience) {
    sql += ` AND experience >= ${experience}`;
  }

  con.query(sql, (err, result) => {
    if (err) {
      res.status(500).json({ err: 'Error while searching for doctors', error: err });
    } else {
      res.status(200).json({ success: true, message: 'Doctors matching the criteria', doctors: result });
    }
  });
};

// Define the route for searching doctors with filters
app.get('/search-doctors', searchDoctors);



